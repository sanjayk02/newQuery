-- Params
SET @Project  := 'potoo';
SET @Root     := 'assets';
SET @Relation := 'com';

WITH ordered AS (
  SELECT
    k.*,
    ROW_NUMBER() OVER (
      ORDER BY
        (k.submitted_at_utc IS NULL) ASC,   -- NULLS LAST
        k.submitted_at_utc ASC,
        k.group_1, k.relation, k.phase      -- tie-breakers for stability
    ) AS _order
  FROM (
    SELECT b.*
    FROM (
      SELECT
        project, root, group_1, relation, phase,
        MAX(modified_at_utc) AS modified_at_utc
      FROM t_review_info
      WHERE project=@Project AND root=@Root AND relation=@Relation AND deleted=0
      GROUP BY project, root, group_1, relation, phase
    ) a
    LEFT JOIN (
      SELECT
        root, project, group_1, phase, relation,
        work_status, submitted_at_utc, modified_at_utc, executed_computer
      FROM t_review_info
      WHERE project=@Project AND root=@Root AND relation=@Relation AND deleted=0
    ) b
      ON  a.project=b.project
      AND a.root=b.root
      AND a.group_1=b.group_1
      AND a.relation=b.relation
      AND a.phase=b.phase
      AND a.modified_at_utc=b.modified_at_utc
  ) AS k
),
offset_ordered AS (
  SELECT
    c.*,
    -- Keep mdl ahead without using a huge offset number:
    CASE WHEN c.phase='mdl' THEN 0 ELSE 1 END AS _phase_bias,
    c._order AS __order_base
  FROM ordered c
),
ranked AS (
  SELECT
    b.*,
    ROW_NUMBER() OVER (
      PARTITION BY b.root, b.project, b.group_1, b.relation
      ORDER BY b._phase_bias ASC, b.__order_base ASC
    ) AS _rank
  FROM offset_ordered b
)
SELECT root, project, group_1, relation
FROM ranked
WHERE _rank=1
ORDER BY _phase_bias ASC, __order_base ASC
LIMIT 15 OFFSET 0;
