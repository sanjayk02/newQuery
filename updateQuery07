-- First query (unchanged logic; just formatting)
WITH ordered AS (
  SELECT
    *,
    ROW_NUMBER() OVER (ORDER BY submitted_at_utc ASC) AS _order
  FROM (
    SELECT b.*
    FROM (
      SELECT project, root, group_1, relation, phase, MAX(modified_at_utc) AS modified_at_utc
      FROM t_review_info
      WHERE project = 'potoo'
        AND root    = 'assets'
        AND deleted = 0
      GROUP BY project, root, group_1, relation, phase
    ) AS a
    LEFT JOIN (
      SELECT
        root, project, group_1, phase, relation,
        work_status, submitted_at_utc, modified_at_utc, executed_computer
      FROM t_review_info
      WHERE project = 'potoo'
        AND root    = 'assets'
        AND deleted = 0
    ) AS b
      ON a.project          = b.project
     AND a.root             = b.root
     AND a.group_1          = b.group_1
     AND a.relation         = b.relation
     AND a.phase            = b.phase
     AND a.modified_at_utc  = b.modified_at_utc
    -- NOTE: this ORDER BY inside a subquery is ignored by MySQL unless used with LIMIT
    -- ORDER BY submitted_at_utc ASC
  ) AS k
),
offset_ordered AS (
  SELECT
    c.*,
    CASE WHEN c.phase = 'mdl' THEN c._order ELSE 100000 + c._order END AS __order
  FROM ordered c
),
ranked AS (
  SELECT
    b.*,
    ROW_NUMBER() OVER (
      PARTITION BY b.root, b.project, b.group_1, b.relation
      ORDER BY CASE WHEN b.phase = 'mdl' THEN 0 ELSE 1 END
    ) AS _rank
  FROM offset_ordered b
)
SELECT root, project, group_1, relation
FROM ( SELECT * FROM ranked WHERE _rank = 1 ) AS t
ORDER BY __order ASC
LIMIT 15 OFFSET 0;
